import javax.media.jai.*;
import java.awt.image.RenderedImage;
import java.io.File;
import java.io.IOException;

public class TIFFMerger {

    public static void main(String[] args) {
        String[] inputFiles = {"input1.tif", "input2.tif", "input3.tif"}; // List of input TIFF files
        String outputFile = "output.tif"; // Output merged TIFF file

        try {
            // Create an array to store the images
            RenderedImage[] images = new RenderedImage[inputFiles.length];

            // Read each input TIFF file and store the images
            for (int i = 0; i < inputFiles.length; i++) {
                File file = new File(inputFiles[i]);
                images[i] = JAI.create("fileload", file.getAbsolutePath());
            }

            // Merge the images
            RenderedImage mergedImage = mergeTIFFs(images);

            // Write the merged image to an output TIFF file
            File output = new File(outputFile);
            JAI.create("filestore", mergedImage, output.getAbsolutePath(), "TIFF");
            
            System.out.println("Merged TIFF file saved successfully.");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Method to merge multiple TIFF images
    public static RenderedImage mergeTIFFs(RenderedImage[] images) {
        ParameterBlock pb = new ParameterBlock();
        pb.addSource(images);

        // Create a mosaic operation
        RenderedOp mosaic = JAI.create("mosaic", pb);

        return mosaic.getAsBufferedImage(); // Return the merged image
    }
}
